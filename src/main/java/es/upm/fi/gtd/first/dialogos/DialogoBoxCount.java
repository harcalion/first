/*
 * DialogoBoxCount.java
 *
 * Created on 8 de mayo de 2008, 21:43
 */

package es.upm.fi.gtd.first.dialogos;

import es.upm.fi.gtd.first.Accesorio;
import es.upm.fi.gtd.first.AreaTrabajo;
import es.upm.fi.gtd.first.Atrous;
import es.upm.fi.gtd.first.CargaAux;
import es.upm.fi.gtd.first.Dialogos;
import es.upm.fi.gtd.first.DialogosAux;
import es.upm.fi.gtd.first.ExampleFileFilter;
import es.upm.fi.gtd.first.FusionAux;
import es.upm.fi.gtd.first.GeoImg;
import es.upm.fi.gtd.first.IconJAI;
import es.upm.fi.gtd.first.ParseXML;
import es.upm.fi.gtd.ij.FractalBoxCounterMod;
import ij.ImagePlus;


import java.awt.BorderLayout;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.color.ColorSpace;
import java.awt.image.ComponentColorModel;
import java.awt.image.DataBuffer;
import java.awt.image.RenderedImage;
import java.awt.image.SampleModel;
import java.awt.image.renderable.ParameterBlock;
import java.io.File;
import java.util.HashMap;
import java.util.List;
import javax.media.jai.ImageLayout;
import javax.media.jai.InterpolationNearest;
import javax.media.jai.JAI;
import javax.media.jai.PlanarImage;
import javax.media.jai.RasterFactory;
import javax.media.jai.operator.BinarizeDescriptor;
import javax.media.jai.operator.MultiplyConstDescriptor;
import javax.media.jai.operator.ScaleDescriptor;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.DefaultXYDataset;
/**
 *
 * @author  Alvar
 */
public class DialogoBoxCount extends javax.swing.JDialog {

    private static final long serialVersionUID = 1L;
    File file_pan;
    Atrous principal;
    ParseXML ic;
    GeoImg binaria;
    
    /** Creates new form DialogoBoxCount
     * @param parent Cuadro principal para dibujar el di치logo
     * @param modal true si el di치logo es modal, false en caso contrario
     * @param princ Objeto principal de estado y GUI de la aplicaci칩n
     */
    public DialogoBoxCount(java.awt.Frame parent, boolean modal, Atrous princ) {
        super(parent, modal);
        principal = princ;
        ic = principal.getIC();
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField10 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Calcular Box Count");

        jButton8.setText("Examinar");
        jButton8.setActionCommand("6");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel10.setText("Imagen");

        jButton1.setText("Cargar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Imagen binaria");

        jCheckBox1.setText("Fondo negro");

        jButton5.setText("Aceptar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Cancelar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextField1.setText("2,3,4,6,8,12,16,32,64");

        jLabel3.setText("Tama침os de cajas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8)
                    .addComponent(jLabel10)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        principal.getFglobal().setDialogType(JFileChooser.OPEN_DIALOG);
        ExampleFileFilter filter =
                new ExampleFileFilter(
                new String [] {"tiff",
                "tif",
                "jpg",
                "jpeg",
                "jpe",
                "bil"},
                ic.buscar(88)); // Tag 88
        principal.getFglobal().resetChoosableFileFilters();
        principal.getFglobal().addChoosableFileFilter(filter);
        
        Accesorio acc = new Accesorio(principal.getFglobal(), principal.getT(), principal.getIC());
        principal.getFglobal().setAccessory(acc);
        acc.esDialogoAbrir();
        acc.setProfundidad(false);
        
        
        
        int retval = principal.getFglobal().showDialog(principal.getT(), null);
        if (retval == JFileChooser.APPROVE_OPTION) {
            acc = (Accesorio) principal.getFglobal().getAccessory();
            boolean separadas = acc.getSeparadas();
            File file = principal.getFglobal().getSelectedFile();
            
            jTextField10.setText(file.getPath());
            
               
            
        } else {
            Dialogos.dibujarMensajesError(ic,retval);
        }
        this.pack();
}//GEN-LAST:event_jButton8ActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

    
    // Comprobar valor de PAN
        if (jTextField10.getText().equalsIgnoreCase(""))
        {
            return;
        }
        file_pan = new File(jTextField10.getText());
        DialogosAux da = new DialogosAux(principal);
        List<GeoImg> pan = CargaAux.cargarArchivo(file_pan, da, principal.getT(), ic);
        double [] extremos = FusionAux.hallarExtremos(pan.get(0).getImage());
        double umbral = (extremos[1]-extremos[0])/2;        
        binaria = new GeoImg(null, 
                                    BinarizeDescriptor.create(pan.get(0).getImage(), 
                                                              umbral, 
                                                                null),
                                    null,
                                    null,
                                    null);
           SampleModel nsm = RasterFactory.createBandedSampleModel(DataBuffer.TYPE_BYTE,
                                             binaria.getImage().getWidth(),binaria.getImage().getHeight(),
                                             1);
        ComponentColorModel cm = new ComponentColorModel(ColorSpace.getInstance(ColorSpace.CS_GRAY),false, false, ComponentColorModel.OPAQUE,nsm.getTransferType());
           
           
        
           //ColorModel cm = PlanarImage.createColorModel(nsm);
           javax.media.jai.ImageLayout layout = new ImageLayout((RenderedImage) binaria.getImage());
            layout.setColorModel(cm);
            layout.setSampleModel(cm.createCompatibleSampleModel(binaria.getImage().getWidth(),
                    binaria.getImage().getHeight()));
            HashMap<RenderingHints.Key,ImageLayout> map = 
      new HashMap<RenderingHints.Key,ImageLayout>();
    map.put(JAI.KEY_IMAGE_LAYOUT,layout);
    RenderingHints hints = new RenderingHints(map);
    // Reformat the image using the above hints.
    ParameterBlock pb = new ParameterBlock();
    pb.addSource(binaria.getImage());
    // We don't really want to change the original surrogate image...
    PlanarImage pi = JAI.create("format",pb,hints);
    binaria.setImage(pi);
        double [] constante = {255.0d};
        binaria.setImage(MultiplyConstDescriptor.create(binaria.getImage(), constante, null));
        float xscale = 90.0f/binaria.getImage().getWidth();
        float yscale = 90.0f/binaria.getImage().getHeight();
        PlanarImage binIcono = ScaleDescriptor.create(binaria.getImage(), 
                    xscale, 
                    yscale, 
                    0.0f, 
                    0.0f, 
                    new InterpolationNearest(), 
                    null);
        GeoImg binIcon = new GeoImg(null, 
                                    binIcono,
                                    null,
                                    null,
                                    null);
        IconJAI dip = new IconJAI(binIcono);
        
        jLabel2.setIcon(dip);
        this.pack();
        
        
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

  
      
        
        
        
        this.setVisible(false);
        JAI.create("imagewrite",binaria.getImage(),"pruebina.tif","TIFF");
        //Image img = binaria.getImage().getAsBufferedImage().getScaledInstance(-1, -1, Image.SCALE_DEFAULT);
        //Image img = binaria.getImage().getAsBufferedImage().getScaledInstance(-1, -1, Image.SCALE_FAST);
        Image imo = binaria.getImage().getAsBufferedImage();
        ImagePlus imp = new ImagePlus(file_pan.getName(),imo);
        
        
        // Tengo los ImageProcessor
        // Fondo negro
        boolean fondoNegro = jCheckBox1.isSelected();
        String s = jTextField1.getText();
        
        FractalBoxCounterMod fpp = new FractalBoxCounterMod (imp, fondoNegro, s);
        String d = fpp.doBoxCounts(fpp.ipo);
        float [] boxSizes = fpp.logSizes;
        float [] boxCountSums = fpp.boxCountSums;
        
        double [] bs = new double [boxSizes.length];
        double [] bcs = new double [boxCountSums.length];
        for (int i = 0; i < bs.length; i++)
        {
            bs[i] = (double) boxSizes[i];
            bcs[i] = (double) boxCountSums[i];
        }
        
        DefaultXYDataset ysds = new DefaultXYDataset();
			
        
        
			double [][] datos = {bs,bcs};
			ysds.addSeries("d", datos); // Tag 147
			
			JFreeChart jfc = ChartFactory.createXYLineChart(
                               "Dimensi칩n fractal (D = " +d+" )",
                                "log(tama침o cajas)",
                                "log(cuenta)",
                                ysds,
                                PlotOrientation.VERTICAL,
                                true,
                                true,
                                false); // Tag 149
			ChartPanel cp = new ChartPanel(jfc);
                        
                        
                        JInternalFrame jif = 
                                new JInternalFrame(
                                    "Dimensi칩n Fractal",
                                    true,
                                    true,
                                    true,
                                    true); // Tag 150
			
                        jif.setDefaultCloseOperation(JInternalFrame.DISPOSE_ON_CLOSE);
                        jif.getContentPane().add(cp);
                        AreaTrabajo dpanel = null;
                        if (principal.getDPane() == null) {
                            dpanel = new AreaTrabajo(principal);
                            
                            
                        }
                        jif.addInternalFrameListener(dpanel);
                        dpanel.add(jif);
			jif.setVisible(true);
			jif.setBounds(0, 0, 500, 600);
                        jif.pack();
                        
                        dpanel.setVisible(true);
		principal.getT().add(dpanel,BorderLayout.CENTER);
                principal.getT().setExtendedState(principal.getT().getExtendedState()|JFrame.MAXIMIZED_BOTH);                
		principal.getT().setVisible(true);
                dpanel.addLista(null);
		
		principal.getT().repaint();
                return;
         
}//GEN-LAST:event_jButton5ActionPerformed

private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

    this.setVisible(false);
}//GEN-LAST:event_jButton6ActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    // End of variables declaration//GEN-END:variables

}
